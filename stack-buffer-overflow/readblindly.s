	.file	"readblindly.c"
	.section	.rodata
	.align 8
.LC1:
	.string	"\nPlease enter up to 3 characters: "
.LC2:
	.string	"%s"
	.align 8
.LC3:
	.string	"The pointer addr of the first byte of our buffer is %p\n"
	.align 8
.LC4:
	.string	"The pointer addr of the first byte of our secret is %p\n"
	.align 8
.LC5:
	.string	"\nThe secret was sesquipedalian. Now it's become: %s\n\n"
	.type	.LSSH0, @object
	.size	.LSSH0, 5
.LSSH0:
	.string	"main"
.LC0:
	.string	"sesquipedalian"
	.text
	.globl	main
	.type	main, @function
main:
.LFB3:
	pushq	%rbp
.LCFI0:
	movq	%rsp, %rbp
.LCFI1:
	subq	$32, %rsp
.LCFI2:
	movq	__guard_local(%rip), %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	.LC0(%rip), %rax
	movq	%rax, -27(%rbp)
	movl	8+.LC0(%rip), %eax
	movl	%eax, -19(%rbp)
	movzwl	12+.LC0(%rip), %eax
	movw	%ax, -15(%rbp)
	movzbl	14+.LC0(%rip), %eax
	movb	%al, -13(%rbp)
	leaq	.LC1(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	-12(%rbp), %rsi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	scanf@PLT
	leaq	-12(%rbp), %rsi
	leaq	.LC3(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	-27(%rbp), %rsi
	leaq	.LC4(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	-27(%rbp), %rsi
	leaq	.LC5(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rdx
	xorq	__guard_local(%rip), %rdx
	je	.L3
	leaq	.LSSH0(%rip), %rdi
	call	__stack_smash_handler@PLT
.L3:
	leave
	ret
.LFE3:
	.size	main, .-main
	.section	.eh_frame,"a",@progbits
.Lframe1:
	.long	.LECIE1-.LSCIE1
.LSCIE1:
	.long	0x0
	.byte	0x1
	.string	"zR"
	.uleb128 0x1
	.sleb128 -8
	.byte	0x10
	.uleb128 0x1
	.byte	0x1b
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE1:
.LSFDE1:
	.long	.LEFDE1-.LASFDE1
.LASFDE1:
	.long	.LASFDE1-.Lframe1
	.long	.LFB3-.
	.long	.LFE3-.LFB3
	.uleb128 0x0
	.byte	0x4
	.long	.LCFI0-.LFB3
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x6
	.align 8
.LEFDE1:
