// Copyright 2012 Andrew Meneely. 
// Licensed under the Educational Community License, Version 2.0 (the "License"); 
// you may not use this file except in compliance with the License. 
// You may obtain a copy of the License at http://www.osedu.org/licenses/ECL-2.0. 
// Unless required by applicable law or agreed to in writing, 
// software distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
// See the License for the specific language governing permissions 
// and limitations under the License.

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class SQLInjection {
	public static void main(String[] args) throws Exception {
	     	//Set up a basic in-memory relational database with H2
		Class.forName("org.h2.Driver").newInstance();
		Connection conn = DriverManager.getConnection("jdbc:h2:mem:db1", "", "");
		conn.createStatement().execute(
			"CREATE TABLE Users(Username VARCHAR(255), Password VARCHAR(255))");
		conn.createStatement().execute( /* The only user we can authenticate with */
			"INSERT INTO Users(Username,Password) VALUES ('bobby','tables'),('bob','tabs')");

		//Get user input
		System.out.print("Enter username: ");
		Scanner scanner = new Scanner(System.in);
		String user = scanner.nextLine();
		System.out.print("Enter password: ");
		String password = scanner.nextLine();

		//Try to authenticate
		System.out.println(auth(user, password, conn));

		//Try to look up someone with LIKE
		System.out.println("Looking up users...");
		like_problem(user, conn);

		conn.close();
	}

	private static String auth(String u, String pwd, Connection conn) throws SQLException {
		ResultSet resultSet;
		resultSet = conn.createStatement().executeQuery(
			"SELECT * FROM Users WHERE Username='" + u + "' AND Password='" + pwd + "'");
						//   BAD!!  ^^^^^^^^^^^              ^^^^^^^^^^^^^
		if (resultSet.next()) // any rows?
			return "Authenticated!!";
		else
			return "Not authenticated!!";
	}

	private static String safe(String u, String pwd, Connection conn) throws SQLException {
		PreparedStatement ps;
		ps = conn.prepareStatement("SELECT * FROM Users WHERE Username=? AND Password=?");
		ps.setString(1, u);
		ps.setString(2, pwd);
		ResultSet resultSet = ps.executeQuery();
		if (resultSet.next()) // any rows?
			return "Authenticated!!";
		else
			return "Not authenticated!!";
	}

	private static void like_problem(String thing, Connection conn) throws SQLException {
	  PreparedStatement ps;
		ps = conn.prepareStatement("SELECT * FROM Users where Username LIKE ?");
		ps.setString(1, thing);
		ResultSet rs = ps.executeQuery();
		while(rs.next()){
				System.out.println("User found: " + rs.getString(1));
		}

	}
}
